{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91832\\\\Documents\\\\GitHub\\\\chat-app\\\\frontend\\\\src\\\\pages\\\\SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport loader from '../loader.gif';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { setAvatarRoute } from '../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: \"dark\"\n  };\n  const setProfile = async () => {\n    if (selectedAvatar === null) {\n      toast.error(\"Please select an Avatar.\", toastOptions);\n      return;\n    }\n    const user = JSON.parse(localStorage.getItem('chat-app-user'));\n\n    // Use _id instead of id\n    if (!user || !user._id) {\n      toast.error(\"User not found. Please log in again.\", toastOptions);\n      return;\n    }\n    try {\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem('chat-app-user', JSON.stringify(user));\n        navigate('/');\n      } else {\n        toast.error(\"Error setting Avatar. Please try again.\", toastOptions);\n      }\n    } catch (error) {\n      toast.error(\"Failed to set Avatar. Please try again.\", toastOptions);\n      console.error(\"Error setting avatar:\", error);\n    }\n  };\n  const api = `https://api.multiavatar.com/4645646`;\n  const fetchAvatars = async (retryCount = 0) => {\n    const data = [];\n    const maxRetries = 3;\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n    try {\n      const promises = Array.from({\n        length: 4\n      }, () => axios.get(`${api}/${Math.round(Math.random() * 1000)}`));\n      const responses = await Promise.all(promises);\n      responses.forEach(response => {\n        const avatarData = btoa(response.data);\n        data.push(avatarData);\n      });\n      setAvatars(data);\n      setIsLoading(false);\n    } catch (error) {\n      if (error.response && error.response.status === 429 && retryCount < maxRetries) {\n        const waitTime = Math.pow(2, retryCount) * 1000;\n        toast.warning(`Too many requests, retrying in ${waitTime / 1000} seconds...`, toastOptions);\n        await delay(waitTime);\n        fetchAvatars(retryCount + 1);\n      } else {\n        toast.error(\"Failed to fetch avatars. Please try again later.\", toastOptions);\n        setIsLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchAvatars();\n  }, [api]);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#2e1d45] min-h-screen flex flex-col justify-center items-center\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"Loading...\",\n        className: \"w-16 h-16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-[#fbcbfb] text-xl font-semibold mb-6\",\n          children: \"Pick an avatar as your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-6\",\n          children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-24 h-24 rounded-full cursor-pointer transition-all duration-300 flex justify-center items-center ${selectedAvatar === index ? \"border-4 border-[#9b6bfb]\" : \"border-4 border-transparent\"}`,\n            onClick: () => setSelectedAvatar(index),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              className: \"w-full h-full rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setProfile,\n          className: \"mt-8 px-6 py-2 bg-[#fb6cd4] text-white rounded-lg shadow-md hover:bg-[#9b6bfb] transition-all duration-300\",\n          children: \"Set Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SetAvatar, \"oRD4rWrIe4czkeq5v+VdB1DPJko=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nvar _c;\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["React","useEffect","useState","loader","useNavigate","ToastContainer","toast","axios","setAvatarRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","toastOptions","position","autoClose","pauseOnHover","theme","setProfile","error","user","JSON","parse","localStorage","getItem","_id","data","post","image","isSet","isAvatarImageSet","avatarImage","setItem","stringify","navigate","console","api","fetchAvatars","retryCount","maxRetries","delay","ms","Promise","resolve","setTimeout","promises","Array","from","length","get","Math","round","random","responses","all","forEach","response","avatarData","btoa","push","status","waitTime","pow","warning","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91832/Documents/GitHub/chat-app/frontend/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport loader from '../loader.gif';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport { setAvatarRoute } from '../utils/APIRoutes';\r\n\r\nexport default function SetAvatar() {\r\n    const [avatars, setAvatars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(null);\r\n\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: \"dark\",\r\n    };\r\n\r\n    const setProfile = async () => {\r\n        if (selectedAvatar === null) {\r\n            toast.error(\"Please select an Avatar.\", toastOptions);\r\n            return;\r\n        }\r\n\r\n        const user = JSON.parse(localStorage.getItem('chat-app-user'));\r\n\r\n        // Use _id instead of id\r\n        if (!user || !user._id) {\r\n            toast.error(\"User not found. Please log in again.\", toastOptions);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\r\n                image: avatars[selectedAvatar],\r\n            });\r\n\r\n            if (data.isSet) {\r\n                user.isAvatarImageSet = true;\r\n                user.avatarImage = data.image;\r\n                localStorage.setItem('chat-app-user', JSON.stringify(user));\r\n                navigate('/');\r\n            } else {\r\n                toast.error(\"Error setting Avatar. Please try again.\", toastOptions);\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Failed to set Avatar. Please try again.\", toastOptions);\r\n            console.error(\"Error setting avatar:\", error);\r\n        }\r\n    };\r\n\r\n    const api = `https://api.multiavatar.com/4645646`;\r\n\r\n    const fetchAvatars = async (retryCount = 0) => {\r\n        const data = [];\r\n        const maxRetries = 3;\r\n        const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n        try {\r\n            const promises = Array.from({ length: 4 }, () =>\r\n                axios.get(`${api}/${Math.round(Math.random() * 1000)}`)\r\n            );\r\n            const responses = await Promise.all(promises);\r\n\r\n            responses.forEach((response) => {\r\n                const avatarData = btoa(response.data);\r\n                data.push(avatarData);\r\n            });\r\n\r\n            setAvatars(data);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 429 && retryCount < maxRetries) {\r\n                const waitTime = Math.pow(2, retryCount) * 1000;\r\n                toast.warning(`Too many requests, retrying in ${waitTime / 1000} seconds...`, toastOptions);\r\n                await delay(waitTime);\r\n                fetchAvatars(retryCount + 1);\r\n            } else {\r\n                toast.error(\"Failed to fetch avatars. Please try again later.\", toastOptions);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAvatars();\r\n    }, [api]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-[#2e1d45] min-h-screen flex flex-col justify-center items-center\">\r\n                {isLoading ? (\r\n                    <img src={loader} alt=\"Loading...\" className=\"w-16 h-16\" />\r\n                ) : (\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <h2 className=\"text-[#fbcbfb] text-xl font-semibold mb-6\">\r\n                            Pick an avatar as your profile picture\r\n                        </h2>\r\n                        <div className=\"grid grid-cols-4 gap-6\">\r\n                            {avatars.map((avatar, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`w-24 h-24 rounded-full cursor-pointer transition-all duration-300 flex justify-center items-center ${selectedAvatar === index ? \"border-4 border-[#9b6bfb]\" : \"border-4 border-transparent\"}`}\r\n                                    onClick={() => setSelectedAvatar(index)}\r\n                                >\r\n                                    <img\r\n                                        src={`data:image/svg+xml;base64,${avatar}`}\r\n                                        alt=\"avatar\"\r\n                                        className=\"w-full h-full rounded-full\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <button\r\n                            onClick={setProfile}\r\n                            className=\"mt-8 px-6 py-2 bg-[#fb6cd4] text-white rounded-lg shadow-md hover:bg-[#9b6bfb] transition-all duration-300\"\r\n                        >\r\n                            Set Profile\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}