{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91832\\\\Documents\\\\GitHub\\\\chat-app\\\\frontend\\\\src\\\\pages\\\\SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport loader from '../loader.gif';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(null); // Initialize with null, not true\n\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: \"dark\"\n  };\n  const setProfile = async () => {\n    // Your logic for setting profile here\n  };\n  const api = `https://api.multiavatar.com/4645646`; // Move API declaration here\n\n  useEffect(() => {\n    const fetchAvatars = async () => {\n      const data = [];\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const avatarData = btoa(image.data); // Use btoa() for encoding base64 in the browser\n        data.push(avatarData);\n      }\n      setAvatars(data);\n      setIsLoading(false);\n    };\n    fetchAvatars(); // Call the async function inside useEffect\n  }, [api]);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: loader,\n      alt: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Pick an avatar as your profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars-container\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            onClick: () => setSelectedAvatar(index) // Set selected avatar\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setProfile,\n        children: \"Set Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"oRD4rWrIe4czkeq5v+VdB1DPJko=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nvar _c;\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["React","useEffect","useState","loader","useNavigate","ToastContainer","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","toastOptions","position","autoClose","pauseOnHover","theme","setProfile","api","fetchAvatars","data","i","image","get","Math","round","random","avatarData","btoa","push","navigate","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","map","avatar","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91832/Documents/GitHub/chat-app/frontend/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport loader from '../loader.gif';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nexport default function SetAvatar() {\r\n    const [avatars, setAvatars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(null); // Initialize with null, not true\r\n\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: \"dark\",\r\n    };\r\n\r\n    const setProfile = async () => {\r\n        // Your logic for setting profile here\r\n    };\r\n\r\n    const api = `https://api.multiavatar.com/4645646`; // Move API declaration here\r\n\r\n    useEffect(() => {\r\n        const fetchAvatars = async () => {\r\n            const data = [];\r\n\r\n            for (let i = 0; i < 4; i++) {\r\n                const image = await axios.get(\r\n                    `${api}/${Math.round(Math.random() * 1000)}`\r\n                );\r\n\r\n                const avatarData = btoa(image.data); // Use btoa() for encoding base64 in the browser\r\n                data.push(avatarData);\r\n            }\r\n            setAvatars(data);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchAvatars(); // Call the async function inside useEffect\r\n    }, [api]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <img src={loader} alt=\"Loading...\" />\r\n            ) : (\r\n                <div>\r\n                    <div>Pick an avatar as your profile picture</div>\r\n                    <div className=\"avatars-container\">\r\n                        {avatars.map((avatar, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"}`}\r\n                                    onClick={() => setSelectedAvatar(index)} // Set selected avatar\r\n                                >\r\n                                    <img src={`data:image/svg+xml;base64,${avatar}`} alt=\"avatar\" />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <button onClick={setProfile}>Set Profile</button>\r\n                </div>\r\n            )}\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}