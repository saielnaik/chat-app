{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91832\\\\Documents\\\\GitHub\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Contacts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contacts({\n  contacts,\n  currentUser\n}) {\n  _s();\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserName(currentUser.username);\n      setCurrentUserImage(currentUser.avatarImage);\n    }\n  }, [currentUser]);\n  const changeCurrentChat = (index, contacts) => {};\n  return currentUserName && currentUserImage && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.isArray(contacts) && contacts.length > 0 ? contacts.map((contact, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n            alt: \"avatar\",\n            className: \"w-full h-full rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No contacts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n}\n_s(Contacts, \"wTP9W2PvLtuLn6SrLcOO3R23lWI=\");\n_c = Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Contacts","contacts","currentUser","_s","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","username","avatarImage","changeCurrentChat","index","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","contact","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/91832/Documents/GitHub/chat-app/frontend/src/components/Contacts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function Contacts({ contacts, currentUser }) {\r\n    const [currentUserName, setCurrentUserName] = useState(undefined);\r\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n    const [currentSelected, setCurrentSelected] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            setCurrentUserName(currentUser.username);\r\n            setCurrentUserImage(currentUser.avatarImage);\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const changeCurrentChat = (index, contacts) => {};\r\n    \r\n    return (\r\n        currentUserName && currentUserImage && (\r\n            <div>\r\n                <div>Logo</div>\r\n                <div>\r\n                    {Array.isArray(contacts) && contacts.length > 0 ? (\r\n                        contacts.map((contact, index) => {\r\n                            return (\r\n                                <div className={`contact ${index === currentSelected ? \"selected\" : \"\" }`}  key={index}>\r\n                                    <img\r\n                                        src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                                        alt=\"avatar\"\r\n                                        className=\"w-full h-full rounded-full\"\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>No contacts available.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAACS,SAAS,CAAC;EACjE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAACS,SAAS,CAAC;EACnE,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACS,SAAS,CAAC;EAEjEV,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAW,EAAE;MACbG,kBAAkB,CAACH,WAAW,CAACS,QAAQ,CAAC;MACxCH,mBAAmB,CAACN,WAAW,CAACU,WAAW,CAAC;IAChD;EACJ,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;EAEjB,MAAMW,iBAAiB,GAAGA,CAACC,KAAK,EAAEb,QAAQ,KAAK,CAAC,CAAC;EAEjD,OACIG,eAAe,IAAIG,gBAAgB,iBAC/BR,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAK;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfpB,OAAA;MAAAgB,QAAA,EACKK,KAAK,CAACC,OAAO,CAACpB,QAAQ,CAAC,IAAIA,QAAQ,CAACqB,MAAM,GAAG,CAAC,GAC3CrB,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEV,KAAK,KAAK;QAC7B,oBACIf,OAAA;UAAK0B,SAAS,EAAE,WAAWX,KAAK,KAAKL,eAAe,GAAG,UAAU,GAAG,EAAE,EAAI;UAAAM,QAAA,eACtEhB,OAAA;YACI2B,GAAG,EAAE,6BAA6BF,OAAO,CAACZ,WAAW,EAAG;YACxDe,GAAG,EAAC,QAAQ;YACZF,SAAS,EAAC;UAA4B;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC,GAL2EL,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMjF,CAAC;MAEd,CAAC,CAAC,gBAEFpB,OAAA;QAAAgB,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACR;AAET;AAAChB,EAAA,CAtCuBH,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}