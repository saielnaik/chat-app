{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91832\\\\Documents\\\\GitHub\\\\chat-app\\\\frontend\\\\src\\\\pages\\\\SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport loader from '../loader.gif';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const [avatar, SetAvatar] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(true);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: \"dark\"\n  };\n  const setProfile = async () => {};\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString('base64'));\n    }\n    SetAvatar(data);\n    setIsLoading(false);\n  }, []);\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Pick an avatar as your profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"6l1PnADwTGR8vlU5xKKf9g4Wtr8=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nvar _c;\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["React","useEffect","useState","loader","useNavigate","ToastContainer","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","avatar","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","toastOptions","position","autoClose","pauseOnHover","theme","setProfile","data","i","image","get","api","Math","round","random","buffer","Buffer","push","toString","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91832/Documents/GitHub/chat-app/frontend/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport loader from '../loader.gif'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nexport default function SetAvatar() {\r\n    const [avatar, SetAvatar] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(true);\r\n\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: \"dark\",\r\n    };\r\n\r\n    const setProfile = async () => {};\r\n\r\n    useEffect(async () => {\r\n        const data = [];\r\n\r\n        for(let i = 0; i<4; i++){\r\n            const image = await axios.get(\r\n                `${api}/${Math.round(Math.random() * 1000)}`\r\n            );\r\n\r\n            const buffer = new Buffer(image.data);\r\n            data.push(buffer.toString('base64'));\r\n        }\r\n        SetAvatar(data);\r\n        setIsLoading(false);\r\n    }, [])\r\n\r\n    const api = `https://api.multiavatar.com/4645646`;\r\n    const navigate = useNavigate();\r\n  return (\r\n    <>\r\n        <div>\r\n            <div>Pick an avatar as your profile picture</div>\r\n        </div>\r\n        <ToastContainer/>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEF,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMgB,YAAY,GAAG;IACjBC,QAAQ,EAAE,cAAc;IACxBC,SAAS,EAAE,IAAI;IACfC,YAAY,EAAE,IAAI;IAClBC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY,CAAC,CAAC;EAEjCtB,SAAS,CAAC,YAAY;IAClB,MAAMuB,IAAI,GAAG,EAAE;IAEf,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,EAAE,EAAC;MACpB,MAAMC,KAAK,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CACzB,GAAGC,GAAG,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAC9C,CAAC;MAED,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACP,KAAK,CAACF,IAAI,CAAC;MACrCA,IAAI,CAACU,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACxC;IACAxB,SAAS,CAACa,IAAI,CAAC;IACfT,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,GAAG,GAAG,qCAAqC;EACjD,MAAMQ,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAChC,oBACEI,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,eACI7B,OAAA;QAAA6B,QAAA,EAAK;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNjC,OAAA,CAACH,cAAc;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACnB,CAAC;AAEP;AAAC7B,EAAA,CAvCuBD,SAAS;EAAA,QA8BZP,WAAW;AAAA;AAAAsC,EAAA,GA9BR/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}