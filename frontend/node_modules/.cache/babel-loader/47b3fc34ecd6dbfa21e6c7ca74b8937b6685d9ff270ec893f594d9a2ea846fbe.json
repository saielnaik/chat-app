{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91832\\\\Documents\\\\GitHub\\\\chat-app\\\\frontend\\\\src\\\\pages\\\\Register.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  const category = 'nature';\n  const apiKey = 'hSEE/gkqi4fRRNSRATry4g==YW87MZmtcAZTisYf';\n  axios.get(`https://api.api-ninjas.com/v1/randomimage?category=${category}`, {\n    headers: {\n      'X-Api-Key': apiKey,\n      'Accept': 'image/jpg'\n    },\n    responseType: 'arraybuffer' // If you need to handle the binary data of the image\n  }).then(response => {\n    console.log(response); // Here, the image data will be in response.data\n    const imageBlob = new Blob([response.data], {\n      type: 'image/jpg'\n    });\n    const imageUrl = URL.createObjectURL(imageBlob);\n\n    // You can display the image using this URL\n    console.log(imageUrl);\n  }).catch(error => {\n    console.error('Error:', error.response ? error.response.data : error.message);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Register\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Register","category","apiKey","get","headers","responseType","then","response","console","log","imageBlob","Blob","data","type","imageUrl","URL","createObjectURL","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91832/Documents/GitHub/chat-app/frontend/src/pages/Register.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Register() {\r\n  const category = 'nature';\r\n  const apiKey = 'hSEE/gkqi4fRRNSRATry4g==YW87MZmtcAZTisYf';\r\n\r\n  axios.get(`https://api.api-ninjas.com/v1/randomimage?category=${category}`, {\r\n    headers: {\r\n        'X-Api-Key': apiKey,\r\n        'Accept': 'image/jpg'\r\n    },\r\n    responseType: 'arraybuffer'  // If you need to handle the binary data of the image\r\n})\r\n.then((response) => {\r\n    console.log(response); // Here, the image data will be in response.data\r\n    const imageBlob = new Blob([response.data], { type: 'image/jpg' });\r\n    const imageUrl = URL.createObjectURL(imageBlob);\r\n\r\n    // You can display the image using this URL\r\n    console.log(imageUrl);\r\n})\r\n.catch((error) => {\r\n    console.error('Error:', error.response ? error.response.data : error.message);\r\n});\r\n  return (\r\n    <div>Register</div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,MAAMC,QAAQ,GAAG,QAAQ;EACzB,MAAMC,MAAM,GAAG,0CAA0C;EAEzDL,KAAK,CAACM,GAAG,CAAC,sDAAsDF,QAAQ,EAAE,EAAE;IAC1EG,OAAO,EAAE;MACL,WAAW,EAAEF,MAAM;MACnB,QAAQ,EAAE;IACd,CAAC;IACDG,YAAY,EAAE,aAAa,CAAE;EACjC,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACvB,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC;IAClE,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,SAAS,CAAC;;IAE/C;IACAF,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;EACzB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IACdV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACX,QAAQ,GAAGW,KAAK,CAACX,QAAQ,CAACK,IAAI,GAAGM,KAAK,CAACC,OAAO,CAAC;EACjF,CAAC,CAAC;EACA,oBACEpB,OAAA;IAAAqB,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB;AAACC,EAAA,GAzBuBzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}